/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package server_chat;

import java.io.*;
import java.net.*;
import java.util.*;
/**
 *
 * @author purwa
 */
public class Server_form extends javax.swing.JFrame {
    ArrayList clientOutputStreams;
    ArrayList<String> Users; 
        public class ClientHandler implements Runnable{
            BufferedReader reader;
            Socket sock;
            PrintWriter client;
            
            public ClientHandler(Socket clientSocket, PrintWriter user){
                client = user;
                try{
                    sock = clientSocket;
                    InputStreamReader isReader = new InputStreamReader(sock.getInputStream());
                    reader = new BufferedReader(isReader);
                }
                catch (Exception ex){
                    ta_chat.append("Unexpected error... \n");
                }
            }
            @Override
            public void run(){
                String message, connect = "connect", disconnect = "Disconnect", chat ="Chat";
                String[] data;
                try
                {
                    while((message = reader.readLine()) != null){
                        ta_chat.append("Received: "+ message + "\n");
                        data = message.split(":");
                        for (String token:data){
                            ta_chat.append(token + "\n");
                        }
                        if(data[2].equals(connect)){
                            tellEveryone((data[0] + ":has disconnected."+ ":" + chat));
                            userRemove(data[0]);
                        }else if(data[2].equals(chat)){
                            tellEveryone(message);
                        }
                        else{
                            ta_chat.append("No condition were met. \n");
                        }
                    }
                    
                }
                catch (Exception ex){
                            ta_chat.append("lost a connection. \n");
                            ex.printStackTrace();
                            clientOutputStreams.remove(client);
                            }
            }
            
        }
    /**
     * Creates new form Server_form
     */
    public Server_form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b_start = new javax.swing.JButton();
        b_end = new javax.swing.JButton();
        b_user = new javax.swing.JButton();
        b_clear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_chat = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        b_start.setText("Start");
        b_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_startActionPerformed(evt);
            }
        });

        b_end.setText("End");
        b_end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_endActionPerformed(evt);
            }
        });

        b_user.setText("Online User");
        b_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_userActionPerformed(evt);
            }
        });

        b_clear.setText("Clear");
        b_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_clearActionPerformed(evt);
            }
        });

        ta_chat.setColumns(20);
        ta_chat.setRows(5);
        jScrollPane1.setViewportView(ta_chat);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b_start, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_end, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_clear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_user, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(35, 35, 35))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_start)
                    .addComponent(b_user))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_clear)
                    .addComponent(b_end))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_endActionPerformed
        // TODO add your handling code here:
        try{
            Thread.sleep(5000);
        }catch(InterruptedException ex){Thread.currentThread().interrupt();}
        tellEveryone("Servis is stoping all........\n");
        ta_chat.append("server stoping...\n");
        
        ta_chat.setText("");
        
    }//GEN-LAST:event_b_endActionPerformed

    private void b_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_startActionPerformed
        // TODO add your handling code here:
        Thread starter = new Thread(new ServerStart());
        starter.start();
        
        ta_chat.append("server start...\n");
    }//GEN-LAST:event_b_startActionPerformed

    private void b_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_userActionPerformed
        // TODO add your handling code here:
        ta_chat.append("\n Online users: \n");
        for (String current_user : Users){
            ta_chat.append(current_user);
            ta_chat.append("\n");
        }
    }//GEN-LAST:event_b_userActionPerformed

    private void b_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_clearActionPerformed
        // TODO add your handling code here:
        ta_chat.setText("");
    }//GEN-LAST:event_b_clearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Server_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Server_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Server_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Server_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Server_form().setVisible(true);
            }
        });
    }
    
    public class ServerStart implements Runnable{
        @Override
        public void run(){
            clientOutputStreams = new ArrayList();
            Users = new ArrayList();
            
            try {
                ServerSocket serverSock = new ServerSocket(2222);
                while(true){
                    Socket clientSock = serverSock.accept();
                    clientOutputStreams.add(writer);
                    
                    Thread listener = new Thread(new ClientHandler(clientSock, writer));
                    listener.start();
                    ta_chat.append("Got a connection. \n");
                }
            }
            catch (Exception ex){
                ta_chat.append("Error making a connection. \n");
            }
        }
    }
    public void userAdd (String data){
        String message, add = ": :Connect", done = "server: : Done", name = data;
     ta_chat.append("Before "+ name +" added. \n");
     Users.add(name);
     ta_chat.append("After "+name+" added. \n");
     String[] tempList = new String[(Users.size())];
     Users.toArray(tempList);
     
     for (String token:tempList){
         message = (token + add);
         tellEveryone(message);
     }
     tellEveryone(done);
    }

    public void userRemove (String data){
        String message, add = ": :Connect", done = "Sever : :Done", name = data;
        Users.remove(name);
        String[] tempList = new String[(Users.size())];
        Users.toArray(tempList);
        
        for (String token:tempList){
            message = (token + add);
            tellEveryone(message);
        }
        tellEveryone(done);
    }
    
    public void tellEveryone(String message){
        Iterator it = clientOutputStreams.iterator();
        
        while (it.hasNext()){
            try{
                PrintWriter writer = (PrintWriter) it.next();
                writer.println(message);
                ta_chat.append("Sending: " + message + "\n");
                writer.flush();
                ta_chat.setCaretPosition(ta_chat.getDocument().getLength());
            }
            catch (Exception ex){
                ta_chat.append("Error menghubung ke semua");
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_clear;
    private javax.swing.JButton b_end;
    private javax.swing.JButton b_start;
    private javax.swing.JButton b_user;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea ta_chat;
    // End of variables declaration//GEN-END:variables
}
